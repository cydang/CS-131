Script started on 2022-10-21 20:22:51-04:00

0) Find the top 10 users who got retweeted the most from other users (for this you need both files, use fgrep) 

]0;chloe@sjsu:~/CS-131/A4[chloe@sjsu A4]$ fgrep "retweeted" downloaded_tweets_extend_nolf2.tsv | awk -F '\t' '{if ($2!=$6){print $5}}' | sed -e 's/.*id=\(.*\)type.*/\1/' | so
ort -r | uniq -c | sort -nr | awk '{print $2}' > sorted_retweeted_tweet_ids.txt
]0;chloe@sjsu:~/CS-131/A4[chloe@sjsu A4]$ awk 'NR==FNR{a[$1];next} $1 in a{print $2}' sorted_retweeted_tweet_ids.txt downloaded_tweets_extend_original_nolf2.tsv | sort -r | u
uniq -c | sort -nr | head -10 | awk '{print $2}' > top_retweeted_users.txt
]0;chloe@sjsu:~/CS-131/A4[chloe@sjsu A4]$ cat top_retweeted_users.txt 
18831926
1891490382
163018653
1495480590572961792
1231514832479948802
1219232377605644289
42836999
1229752606714728454
380648579
813314931147816960

1) Represent influence between users as a directional graph of users, save as a list of lines, as described next:

Represent a user A getting a retweet from another user B as a line A_ID,B_ID (A_ID and B_ID are the comma separated IDs of user A and B, though you can also tab-separate A_ID and B_ID if it fits you).

]0;chloe@sjsu:~/CS-131/A4[chloe@sjsu A4]$ fgrep "retweeted" downloaded_tweets_extend_nolf2.tsv | awk -F '\t' '{if ($2!=$6){print $5}}' | sed -e 's/.*id=\(.*\)type.*/\1/' | aw
wk '!/^$/' > reference_id_tweets.txt
]0;chloe@sjsu:~/CS-131/A4[chloe@sjsu A4]$ fgrep "retweeted" downloaded_tweets_extend_nolf2.tsv | awk -F '\t' '{if ($2!=$6){print $2}}' | awk '!/id/' > authors_who_retweeted.t
txt
]0;chloe@sjsu:~/CS-131/A4[chloe@sjsu A4]$ paste reference_id_tweets.txt authors_who_retweeted.txt  | sort > authors_and_reference_id_tweets.txt
]0;chloe@sjsu:~/CS-131/A4[chloe@sjsu A4]$ head authors-[K_and_reference_id_tweets.txt 
1004656199885836288 	631283641
1017456403961835520 	940778288871542786
1023111834587607041 	1387010761994682371
1026437890731999232 	1387010761994682371
1026716985143508992 	1387010761994682371
1027189486466330624 	1387010761994682371
1036740863551053824 	41186732
1039512558946811904 	1387010761994682371
1040192907855187968 	1387010761994682371
1040337381356974081 	1387010761994682371
]0;chloe@sjsu:~/CS-131/A4[chloe@sjsu A4]$ awk 'NR==FNR{a[$1];next} $1 in a{print $1"\t"$2}' reference_id_tweets.txt downloaded_tweets_extend_original_nolf2.tsv | sort > autho
ors_and_tweet_ids.txt
]0;chloe@sjsu:~/CS-131/A4[chloe@sjsu A4]$ join authors_and_tweet_ids.txt authors_and_reference_id_tweets.txt | awk '{print $2"\t"$3}' | sort > graph1.txt
]0;chloe@sjsu:~/CS-131/A4[chloe@sjsu A4]$ head graph1.txt 
1000005001	4757894056
1000122949645586432	29447428
1000499544	2574271742
1000509814898765825	29447428
1000563587809624065	614600545
1001228776032763905	832019161454817280
1001228776032763905	832019161454817280
1001228776032763905	832019161454817280
1001228776032763905	832019161454817280
1001228776032763905	832019161454817280

2) Produce clusters (groups of influence) by ranking the users who got retweets by their number of retweets. Keep only the largest clusters by "cutting" at a threshold of 3; in order words, keep just the graph for users who got 3 or more retweets.

]0;chloe@sjsu:~/CS-131/A4[chloe@sjsu A4]$ cut -f 1 graph1.txt | uniq -c | sort -rn | awk '{ if ($1 >= 3) {print $2} }' > authorswithmorethan3retweets.txt
]0;chloe@sjsu:~/CS-131/A4[chloe@sjsu A4]$ awk 'NR==FNR {a[$1]; next} $1 in a' authorswithmorethan3retweets.txt graph1.txt > graph2.txt

3) Plot the sizes of clusters as a histogram to show how many clusters of each size resulted.

]0;chloe@sjsu:~/CS-131/A4[chloe@sjsu A4]$ awk '{print $1}' graph2.txt | uniq -c > graph3.txt

[chloe@sjsu A4]$ ../../../../etc/gnuplot-5.4.4/src/gnuplot 

        G N U P L O T
        Version 5.4 patchlevel 4    last modified 2022-07-10 

        Copyright (C) 1986-1993, 1998, 2004, 2007-2022
        Thomas Williams, Colin Kelley and many others

        gnuplot home:     http://www.gnuplot.info
        faq, bugs, etc:   type "help FAQ"
        immediate help:   type "help"  (plot window: hit 'h')

Terminal type is now 'unknown'
gnuplot> se terminal svg size 400,300

Terminal type is now 'svg'
Options are 'size 400,300 fixed enhanced font 'Arial,12' butt dashlength 1.0 '
gnuplot> set output 'xyz.png'
gnuplot> binwidth=1
gnuplot> bin(x,width)=width*floor(x/width)                                      
gnuplot> set style fill solid 1.00 border 0                                     
gnuplot> plot 'graph3.txt' using (bin($1,binwidth)):(1.0) smooth freq with boxes
gnuplot> exit
[chloe@sjsu A4]$ display ../../../../etc/gnuplot-5.4.4/src/gnuplot xyz.png 
display: no decode delegate for this image format `' @ error/constitute.c/ReadImage/576

4) Find the 30 most frequent hashtags in these largest clusters of retweets you kept. Compare to the 30 most frequent hashtags you found in assignment #2 (overall, question 5). Which hashtags appear in these clusters that did not appear in the frequent hashtags from assignment #2 (you can use sort and diff for this)?

A: These are the hashtags that appear in these clusters that did not appear in the frequent hashtags from a2:
6thWave
BorisJohnson
Brexit
BuildBackBetter
CloseTheSky
covid
COVID19Ab
CovidRelief
EndIsraeliApartheid
foodforest
FordShitShow
HumanRights
Infrastructure
IStandWithUkraine
NATO
NBAAllStar
NFLDraft2022
NOWAYHOSAI
partygate
PerjuryTaylorGreene
permaculture
PlannedParenthood
RESPECT
SspeakOutAgainstWorldWar3
SustainableLife
WasteWater
WillSmith

]0;chloe@sjsu:~/CS-131/A4[chloe@sjsu A4]$ cut -d "       " -f 4 downloaded_tweets_extend_original_nolf2.tsv | tr -d '"' | tr ',' '\n' | sort | uniq -c | sort -nr | head -30 > a2hashtags
]0;chloe@sjsu:~/CS-131/A4[chloe@sjsu A4]$ awk '{print $2}' a2hashtags | sort > a2hashtags_sorted
]0;chloe@sjsu:~/CS-131/A4[chloe@sjsu A4]$ awk 'NR==FNR {map[$2] = $0; next} $2 in map {print $0, map[$2]}' downloaded_tweets_extend_original_nolf2.tsv graph2.txt | cut -f 5 | tr -d '"' | tr ',' '\n' | sort | uniq -c | sort -nr | head -30 > a4hashtags
]0;chloe@sjsu:~/CS-131/A4[chloe@sjsu A4]$ awk '{print $2}' a4hashtags | sort > a4hashtags_sorted
]0;chloe@sjsu:~/CS-131/A4[chloe@sjsu A4]$ vimdiff a2hashtags_sorted a4hashtags_sorted
2 files to edit

5) A major part of data science is visualizing the results in order to present them to your peers. Without visualizing your results, your results won't get the attention they deserve from other people. Plot a network cluster you got for retweets and a cluster for replies (from this and the previous assignment) in a network visualization tool, such as Gephi.

[?2004l[?1l>[?25h[?1049l[23;0;0t]0;chloe@sjsu:~/CS-131/A4[chloe@sjsu A4]$ sed 's/\t/,/g' ../A3/1.tsv > graph1_a3.csv
]0;chloe@sjsu:~/CS-131/A4[chloe@sjsu A4]$ sed 's/\t/,/g' graph1.txt > graph1.csv
]0;chloe@sjsu:~/CS-131/A4[chloe@sjsu A4]$ grep 3131144855 graph1_a3.csv > reply_cluster.csv
]0;chloe@sjsu:~/CS-131/A4[chloe@sjsu A4]$ grep 985749294 graph1.csv > retweet_cluster.csv

6) Describe in a few sentences (2-3 sentences) what the networks you plotted show at the bottom of a4.txt.

The network cluster graphs I ploted demonstrate the connections between entities where each entity is a Node. The edges that link a 
 node to another node represents the relationship between the two Nodes. One Node can have multiple connections to another Node. For the plots of aut
thors who replied to or reteeted another authors, there is an edge connected the users (Nodes) and also edges that connect those authors to other aut
thors they replied to or retweeted or were replied to or retweeted by. For the reply_cluster graph, the author was replied to by 5 other authors. For
 the retweet_cluster graph, the edges show who retweeted the author and the thickness of the arrows display the weight/how many times the same user retweeted the author, showing how influential the author is to another specific author.
bash: syntax error near unexpected token `('
]0;chloe@sjsu:~/CS-131/A4[chloe@sjsu A4]$ exit

Script done on 2022-10-21 20:28:16-04:00
